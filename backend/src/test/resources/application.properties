# Configurações do GraphQL
spring.graphql.graphiql.enabled=true

# Configurações do DataSource
spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=password
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

# Configurações específicas do Hibernate (opcional)
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update

# Configurações do Keycloak
# spring.security.oauth2.client.registration.keycloak.client-id=pokestation
# spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
# spring.security.oauth2.client.registration.keycloak.scope=openid
# spring.security.oauth2.client.provider.keycloak.issuer-uri=${POKESTATION_AUTH_BASE_URL}/realms/pokestation
# spring.security.oauth2.client.provider.keycloak.user-name-attribute=preferred_username
# spring.security.oauth2.resourceserver.jwt.issuer-uri=${POKESTATION_AUTH_BASE_URL}/realms/pokestation

## keycloak
spring.security.oauth2.client.provider.external.issuer-uri=${POKESTATION_AUTH_BASE_URL}/realms/pokestation
spring.security.oauth2.client.registration.external.provider=external
spring.security.oauth2.client.registration.external.client-name=pokestation
spring.security.oauth2.client.registration.external.client-id=pokestation
spring.security.oauth2.client.registration.external.client-secret=qdVjxUTBSTSAG0Rjq6OHdSWgY7tgEkSU
spring.security.oauth2.client.registration.external.scope=openid,offline_access,profile
spring.security.oauth2.client.registration.external.authorization-grant-type=authorization_code
